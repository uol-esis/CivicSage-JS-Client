/**
 * CivicSage
 * CivicSage is a service that allows you to index files and websites. 
 *
 * The version of the OpenAPI document: 0.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileSource from './FileSource';
import WebsiteSource from './WebsiteSource';

/**
 * The GetAllIndexedSources200Response model module.
 * @module model/GetAllIndexedSources200Response
 * @version 0.6.1
 */
class GetAllIndexedSources200Response {
    /**
     * Constructs a new <code>GetAllIndexedSources200Response</code>.
     * @alias module:model/GetAllIndexedSources200Response
     */
    constructor() { 
        
        GetAllIndexedSources200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAllIndexedSources200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAllIndexedSources200Response} obj Optional instance to populate.
     * @return {module:model/GetAllIndexedSources200Response} The populated <code>GetAllIndexedSources200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAllIndexedSources200Response();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [FileSource]);
            }
            if (data.hasOwnProperty('websites')) {
                obj['websites'] = ApiClient.convertToType(data['websites'], [WebsiteSource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAllIndexedSources200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAllIndexedSources200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['files'])) {
            throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['websites'])) {
            throw new Error("Expected the field `websites` to be an array in the JSON data but got " + data['websites']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/FileSource>} files
 */
GetAllIndexedSources200Response.prototype['files'] = undefined;

/**
 * @member {Array.<module:model/WebsiteSource>} websites
 */
GetAllIndexedSources200Response.prototype['websites'] = undefined;






export default GetAllIndexedSources200Response;


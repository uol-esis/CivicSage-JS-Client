/**
 * CivicSage
 * CivicSage is a service that allows you to index files and websites. 
 *
 * The version of the OpenAPI document: 0.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IndexFilesRequestInner model module.
 * @module model/IndexFilesRequestInner
 * @version 0.6.1
 */
class IndexFilesRequestInner {
    /**
     * Constructs a new <code>IndexFilesRequestInner</code>.
     * @alias module:model/IndexFilesRequestInner
     * @extends Object
     * @param fileId {String} The id returned by the upload endpoint
     */
    constructor(fileId) { 
        
        IndexFilesRequestInner.initialize(this, fileId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileId) { 
        obj['fileId'] = fileId;
    }

    /**
     * Constructs a <code>IndexFilesRequestInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IndexFilesRequestInner} obj Optional instance to populate.
     * @return {module:model/IndexFilesRequestInner} The populated <code>IndexFilesRequestInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IndexFilesRequestInner();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('fileId')) {
                obj['fileId'] = ApiClient.convertToType(data['fileId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IndexFilesRequestInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IndexFilesRequestInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IndexFilesRequestInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fileId'] && !(typeof data['fileId'] === 'string' || data['fileId'] instanceof String)) {
            throw new Error("Expected the field `fileId` to be a primitive type in the JSON string but got " + data['fileId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

IndexFilesRequestInner.RequiredProperties = ["fileId"];

/**
 * The id returned by the upload endpoint
 * @member {String} fileId
 */
IndexFilesRequestInner.prototype['fileId'] = undefined;

/**
 * The title of the file used in search results. Defaults to the file name without the file ending. 
 * @member {String} title
 */
IndexFilesRequestInner.prototype['title'] = undefined;

/**
 * A date associated with the file. This can be used to filter search results by date. 
 * @member {Date} date
 */
IndexFilesRequestInner.prototype['date'] = undefined;






export default IndexFilesRequestInner;

